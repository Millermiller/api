<?php

namespace DoctrineProxies\__CG__\Scandinaver\Learn\Domain;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Word extends \Scandinaver\Learn\Domain\Word implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'id', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'creatorId', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'word', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'transcription', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'audio', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'sentence', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'isPublic', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'createdAt', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'updatedAt', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'deletedAt', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'creator', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'language', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'languageId', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'cards'];
        }

        return ['__isInitialized__', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'id', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'creatorId', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'word', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'transcription', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'audio', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'sentence', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'isPublic', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'createdAt', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'updatedAt', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'deletedAt', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'creator', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'language', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'languageId', '' . "\0" . 'Scandinaver\\Learn\\Domain\\Word' . "\0" . 'cards'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Word $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValue', []);

        return parent::getValue();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCards()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCards', []);

        return parent::getCards();
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function getWord(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWord', []);

        return parent::getWord();
    }

    /**
     * {@inheritDoc}
     */
    public function setWord(string $word): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWord', [$word]);

        parent::setWord($word);
    }

    /**
     * {@inheritDoc}
     */
    public function getAudio(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAudio', []);

        return parent::getAudio();
    }

    /**
     * {@inheritDoc}
     */
    public function setAudio(?string $audio): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAudio', [$audio]);

        parent::setAudio($audio);
    }

    /**
     * {@inheritDoc}
     */
    public function setSentence(?int $sentence): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSentence', [$sentence]);

        parent::setSentence($sentence);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPublic(?int $isPublic): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPublic', [$isPublic]);

        parent::setIsPublic($isPublic);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreator(\Scandinaver\User\Domain\User $creator): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreator', [$creator]);

        parent::setCreator($creator);
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage(\Scandinaver\Common\Domain\Language $language): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', [$language]);

        parent::setLanguage($language);
    }

}
